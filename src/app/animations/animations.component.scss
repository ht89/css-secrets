@keyframes bounce {
    60%,
    80%,
    to {
        transform: translateY(400px);
        animation-timing-function: ease;
    }
    70% {
        transform: translateY(300px);
    }
    90% {
        transform: translateY(360px);
    }
}

.ball {
    display: inline-block;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    background: black; // if timing function is not specified, ease is used by default
    animation: bounce 3s cubic-bezier(.1, .25, 1, .25); // opposite of cubic-bezier(.25, .1, .25, .1) same as ease
}

.input-wrapper {
    position: relative;
    display: inline-block;
    margin-left: 60px;
}

.callout {
    position: absolute;
    font-size: .5rem;
    border: 1px solid rgba(0, 0, 0, .1);
    border-radius: .2rem;
    background-color: blanchedalmond;
    color: #000;
    padding: .3rem;
    width: 100%;
    &::before {
        content: '';
        position: absolute;
        top: -.3em;
        left: 1em;
        padding: .35em;
        background: inherit;
        border: inherit;
        border-right: 0;
        border-bottom: 0;
        transform: rotate(45deg);
    }
}

input[type="text"]:not(:focus)+.callout {
    transform: scale(0);
    transition: .25s transform; // fix the issue of the callout scaled to -0.1 when transition reaches 110% progression. This already includes transition-timing-function: ease & increases the transition speed
}

.callout {
    transition: .5s cubic-bezier(.25, .1, .3, 1.5) transform; // default value: all (transition applied to all properties)
    transform-origin: 1.4em -.4em;
}

@keyframes loader {
    to {
        background-position: -800px 0; // 100 * 8 frames
    }
}

.loader {
    display: inline-block;
    width: 100px;
    height: 100px;
    background: url('http://dabblet.com/img/loader.png') 0 0;
    animation: loader 1s infinite steps(8);
    /* hide text */
    text-indent: 200%;
    white-space: nowrap;
    overflow: hidden;
}

@keyframes blink-smooth {
    to {
        color: transparent;
    }
}

.highlight {
    // animation-direction values: normal (default), reverse, alternate, alternate-reverse
    animation: .5s blink-smooth 6 alternate;
    display: inline-block;
}

@keyframes typing {
    from {
        width: 0;
    }
}

@keyframes caret {
    50% {
        border-color: black;
    }
}

h1 {
    width: 15ch; // 1ch = 1 monospace font character
    animation: typing 6s steps(15), caret 1s steps(1) infinite;
    font-family: monospace;
    border-right: .05em solid transparent;
    display: inline-block;
    white-space: nowrap;
    overflow: hidden;
}

@keyframes panoramic {
    to {
        background-position: 100% 0;
    }
}

.panoramic {
    margin-left: 100px;
    margin-top: 50px;
    width: 150px;
    height: 150px;
    background: url('../../assets/img/tiger.jpg');
    background-size: auto 100%;
    animation: panoramic 10s linear infinite alternate;
    animation-play-state: paused; // pause animation until a user action
    &:hover,
    &:focus {
        animation-play-state: running;
    }
}
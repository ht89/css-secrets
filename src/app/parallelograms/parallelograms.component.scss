button {
    padding: 10px 15px;
    border: 0;
    position: relative;
    background-color: transparent;
    color: #fff;
    /* use pseudo-element so that the tranformations will not affect the text  */
    &:before {
        content: '';
        position: absolute; // these ensure the pseudo-element stretches to the size of its parent
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: #58a; // need this since the pseudo element is above the parent by default
        z-index: -1;
        transform: skewX(-45deg);
    }
}

.cutout-corners {
    margin-top: 30px;
    width: 100px;
    height: 50px;
    background-color: #58a;
    background: linear-gradient(-45deg, transparent 15px, #58a 0) right, linear-gradient(45deg, transparent 15px, #655 0) left;
    background-size: 50% 100%;
    background-repeat: no-repeat;
}

@mixin bevelled-corners($bg, $tl:0, $tr:$tl, $br:$tl, $bl: $tr) {
    background-color: $bg;
    background: linear-gradient(135deg, transparent $tl, $bg 0) top left, linear-gradient(-135deg, transparent $tr, $bg 0) top right, linear-gradient(-45deg, transparent $br, $bg 0) bottom right, linear-gradient(45deg, transparent $bl, $bg 0) bottom left;
    background-size: 50% 50%;
    background-repeat: no-repeat;
}

.four-cutout-corners {
    margin-top: 30px;
    width: 150px;
    height: 100px;
    @include bevelled-corners(#58a, 15px, 5px);
}

@mixin curved-bevelled-corners($bg, $tl:0, $tr:$tl, $br:$tl, $bl: $tr) {
    background-color: $bg;
    background: radial-gradient(circle at top left, transparent $tl, $bg 0) top left, radial-gradient(circle at top right, transparent $tr, $bg 0) top right, radial-gradient(circle at bottom right, transparent $br, $bg 0) bottom right, radial-gradient(circle at bottom left, transparent $bl, $bg 0) bottom left;
    background-size: 50% 50%;
    background-repeat: no-repeat;
}

.curved-cutout-corners {
    margin-top: 30px;
    width: 150px;
    height: 100px;
    @include curved-bevelled-corners(#58a, 14px);
}

.cutout-corners-using-clip-path {
    margin-top: 30px;
    width: 150px;
    height: 100px;
    background: #58a;
    clip-path: polygon( 20px 0, calc(100% - 20px) 0, 100% 20px, 100% calc(100% - 20px), calc(100% - 20px) 100%, 20px 100%, 0 calc(100% - 20px), 0 20px);
}

.trapezoid {
    margin-top: 30px;
    display: inline-block;
    padding: .5rem 1rem .35rem;
    color: #fff;
    position: relative;
    /* use pseudo-element so that the tranformations will not affect the text  */
    &:before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
        z-index: -1;
        background-color: #58a;
        transform: perspective(.5rem) rotateX(5deg) scaleY(1.3); // scale makes up for the lost height due to rotation
        transform-origin: bottom; // make the element position fixed when rotating it. Otherwise, its width will be larger & its top decreases
    }
}

.nav {
    margin-top: 30px;
    nav > a {
        position: relative;
        display: inline-block;
        padding: .3rem 1rem 0;
        text-decoration: none;
        color: #000;
        &:before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: -1;
            background: #ccc;
            background-image: linear-gradient(hsla(0, 0%, 100%, .6), hsla(0, 0%, 100%, 0));
            border: 1px solid rgba(0, 0, 0, .4);
            border-bottom: 0;
            border-radius: .5rem .5rem 0 0;
            box-shadow: 0 .15rem white inset;
            transform: perspective(.5rem) rotateX(5deg);
            transform-origin: bottom left; // use 'bottom left' or 'bottom right' for left/right slanted tabs
        }
    }
}
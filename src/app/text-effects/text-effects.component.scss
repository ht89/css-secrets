.stroked-text {
    display: inline-block;
    background-color: deeppink;
    color: white;
    font-size: 3rem;
    text-shadow: 1px 1px black, -1px -1px black, 1px -1px black, -1px 1px black;
}

h1 {
    display: inline-block;
    font: 500%/1 Rockwell, serif;
    background-color: deeppink;
    color: white;
    text {
        fill: white;
        stroke: black;
        stroke-width: 6;
        stroke-linejoin: round;
    }
    svg {
        overflow: visible;
    }
}

.glowing-text {
    display: inline-block;
    background-color: #203;
    color: #fff;
    font-size: 2rem;
    transition: 1s;
    &:hover {
        text-shadow: 0 0 .1em, 0 0 .3em;
    }
    &--blurred:hover {
        color: transparent;
        text-shadow: 0 0 .1em white, 0 0 .3em white;
    }
}

// degrade gracefully: if filter is not supported, the text still appears
.blurred-text {
    display: inline-block;
    background-color: #203;
    color: #fff;
    font-size: 2rem;
    transition: 1s;
    &:hover {
        filter: blur(.1em);
    }
}

@mixin text-3d($color: white, $depth: 5) {
    $shadows: ();
    $shadow-color: $color;
    @for $i from 1 through $depth {
        $shadow-color: darken($shadow-color, 10%);
        $shadows: append($shadows, 0 ($i * 1px) $shadow-color, comma);
    }
    color: $color;
    text-shadow: append($shadows, 0 ($depth * 1px) 10px black, comma);
}

.extruded-text {
    display: inline-block;
    background-color: #58a;
    color: white;
    font-size: 2rem;
    padding: 20px 10px;
    @include text-3d(#eee, 4);
}

@function text-retro($color: black, $depth: 8) {
    $shadows: ();
    @for $i from 1 through $depth {
        $shadows: append($shadows, ($i * 1px) ($i * 1px) $color, comma);
    }
    @return $shadows;
}

.retro-text {
    display: inline-block;
    color: white;
    font-size: 2rem;
    padding: 20px 10px;
    background-color: hsl(0, 50%, 45%);
    text-shadow: text-retro();
}

.circular {
    margin-top: 60px;
    width: 150px;
    height: 150px;
    path {
        fill: none;
    }
    svg {
        display: block;
        overflow: visible;
    }
}